#Estimation with data-driven dataset
#bnlearn package is used here, and for ROC analysis, ROCOR package is required

nbayes_f=naive.bayes(trainingf_data, training="Benefit")
pr.nbayes_f <- predict(nbayes_f,testingf_data, prob=TRUE)
r_nbayes_f <- attributes(pr.nbayes_f)$prob[2,]
pred_nbayes_f<-prediction(r_nbayes_f, testingf_data$Benefit)
perf_nbayes_f<-performance(pred_nbayes_f29, "tpr", "fpr")
plot(perf_nbayes_f)
auc_nbayes_f.tmp <- performance(pred_nbayes_f,"auc")
auc_nbayes_f <- as.numeric(auc_nbayes_f.tmp@y.values)
auc_nbayes_f

#########################################
#Estimation with evidence-based dataset
nbayes_d=naive.bayes(trainingd_data, training="Benefit")
graphviz.plot(nbayes_d, layout="fdp", shape="ellipse")
pr.nbayes_d<- predict(nbayes_d,testingd_data, prob=TRUE)
r_nbayes_d <- attributes(pr.nbayes_d)$prob[2,]
pred_nbayes_d<-prediction(r_nbayes_d, testingd_data$Benefit)
perf_nbayes_d<-performance(pred_nbayes_d, "tpr", "fpr")
plot(perf_nbayes_d)
auc_nbayes_d.tmp <- performance(pred_nbayes_d,"auc")
auc_nbayes_d <- as.numeric(auc_nbayes_d.tmp@y.values)
auc_nbayes_d
